<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB0AAAAaCAIAAADE9MDgAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAAHtJREFUSEvt0NsKxCAMRVH//6et6A41JZZ4KUVwvdnM2Q8T4jdOt/ijGwTvHs0N
        ScFXN3tArMLBzRhQ0ri5PQdkNG491IbMKCrZ/eA4h9bO3YTjKCqZeiT8ROPWw9gQ07i52QNiFQ5uzQE9
        wVe3twHJVf/vEqdb7NWN8QI889p6fPgBxAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAARFgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABXLSURBVHja7Z33f1TV1ofv//MaXhXsel8FkUtRkNBCEiTUQEJJCL0jKl16R4r0FiSh
        h1BDCSRKsdEM/iPrPd89M7kRE6TsSeac8/zwfMB7YZiZnPXsttba//rj0U0DgHjyL74EAAQAAAgAABAA
        ACAAAEAAAIAAAAABAAACAAAEAAAIAAAQAAAgAABAAACAAAAAAQAAAgAABAAACAAAEAAAIAAAQAAAgAAA
        AAEAAAIAAAQAAAgAABAAACAAAEAAAIAAAAABAAACAAAEAAAIAAAQAAAgAAAEwJcAgAAAAAEAAAIAAAQA
        AAgAABAAACAAAEAAAIAAAAABAAACAAAEAAAIAAAQAAAgAABAAACAAAAAAQAAAgAABAAACAAAEAAAIAAA
        QAAAgAAAAAEAAAIAAAQQAR431FnDH3Whea9/NtTHloY/EAD4CKQg4BVM9+9dt3MXj9u6bZtt4coVtnzD
        Wrtz53JGCuH+/VqrvnDMKk4etsqT5fHjVLnduXs5NLJGABlGQzLoHz68YVevV9m2PdutaOos69RvqL36
        cV/L6tjH3u81yGqunXF/LtPee139ecsdXWrvfJpn736WHzv0szl64rD9+bgeAcDzBb1+X//jedtXvscm
        zfvKuucX2utd+rugb9epj/1vIIB2nfravz//wq5koAD0fi5fOW2d+w9rfM9x49XO/ay88iACgGeb4iv4
        NWWsCEaNuUuWWp9hY+3NbjnuYcpKBn1TMlsA9VZ1rtKN/k++77jw2icIAJ5htP/tt6tWdf6YLV23xgaN
        KbP3gulju+QU/2kPWKYL4HDFAWv/nwEIAAHAk0H/4H6t1Vw9bRt3bLHCSTPsw+wCN2VMTJef7QHL9CXA
        lp1bgyDojwAQAEGfCtAbdeds14FdVjr7S/vPwBEuQLI6Zjeu65+HTBaAPvOSNasDqfVFAAggvkGvX2/d
        vhQ8CAdsxoKF1nNwkXUIpsUa6bNeIOjDI4CbNv3rBS8kNgSAAMIZ9E3O63/55YqdOPODfb18uQ0YVWJv
        d89NbOZ19BcQmSwAMXrKTHslmN0gAAQQi9H+99+v2cWaU7Z68wYbUjLFPug1yD0IPoM+LALQxmZ+cZm9
        8hECQACRDPrERteDB7V2/cZZ27p7u42dPscl6bzeuK5P7wOWqQKQEJXD0HvoGPc9IAAEEJ0pfkPih/nT
        rYu2/8hem/rVNy5Jp0PXnBfezIuaAFJJQNrkzGIPAAGEP+gTm3k//1zjcry/+vZbyx421t7ukdu4mdeu
        DR6wzBVAvZ0+W2EfBO+NTUAEENqKu9S6/uz5Y/bt+rWWF6xp3+uZ37iZ19YPd6YKQA+8Hvw4JwEhgNBu
        5tW7KjYl6Wza8Z2NnDjdPsouSG7mZWfUiJbJMwAVLsU5+BFAyDbzVHF3s0mSTpec4X8rvsk0MnkTUDMm
        BIAAMppHQdDfTibpzFq42CXpqPgmk4M+DAJ49PBm8H0uivX63wmAasDMnu6rsUZu0QR799O8FivuEMDz
        8/DBDRszbba3/AelEytlOmxoD+TIMQSQsZt8h47ubyy3DeMIk6kCUNcibZj6yALUz2ZAYYmt37bZNm7f
        Eio27djilpV0BMpgAbylFN2QTjEzUQA6Nr1955J9PqTYSxKQBDBn8ZLGvRqXah0iaAqKAOIlgOCh1/tx
        SUAelgASwIqN6yIziiIABBBpAeh9nDpbYR9mD/a2tNqx73vXYZcgRAAIIMMFoEA9VJH8Xj3UQrzRLSdS
        O+kIAAFEWwBBoG7fu8NLIxDNIP6v92A7XV3RWIMBCCB0Asjy3Acg0/cAVmxc7+Xz6jW65o5MtD1nDwAB
        hEkAqaBXNphaYxdNmWkzFyyyN7sNjLQAlFE5d8kSTwLIdp2RVXnJJiACyHgBJIqEsq19l/72yYBhriOO
        mn5euHzSZR2qQs5nm+xMFIByAMbPnOtFAGomMmjMRPeaBCACyEgBpIJeff5UPzBuxhzXDfdSzSm7Fzy4
        DcnzYG2Onao6GnkBqBPQF2MneVsCjJk+2x4RfAggkwSQKgdu3xj0c21zEPQKRAV9c5d3xkUAd+/WWK+C
        Im85ALMXLSb4EEDbCyC1pleFoIJe7b+27NzWJOjrn7pOjYMA9PnVHk3fjw8B6P7D5RtIAkIAbSQA1+1H
        Qf9Jf5fZpuno1t3bXK+A+/cTQe+u9HrG8/GoC0DfxZlzle6SEx9JQNpAVRJQJnY8RgARFIACKhX0WtOr
        11/p7HnuIVTQqwFoqlPQiyTIRF4ASgIKvtNUdeXLfj79DNztuuQAIID0CWBgMuiz7Y2uOdY9r9DK5sy3
        7/fvtGu1Z11p64sGfdwEoCQgdUf20QpMn01t1dWOjSQgBJA2ASjTrFveSCubO9+N9LXBGlb39jW3kYcA
        /lkAKtzx0VdBMwglAWXqpScIIAINQa7VVtm+8r1We7O6cU2frg2nuJwCzFu61EsfAM3K+g4fZz/+dIFN
        QASQziagda3ygMVBADoN0Z6Jjz4AkkjB+Mkur0C9AAhABBBqoi4ABanuQxxaMsVbFqCOWnl2EAACCIUA
        ErcgZ+s6sE7+koAoAkIACCAkAlD/OxU++coBWL5hLRuACAABhEEAGqmrLxx378eHAHSUuH3Pjuf+XA1J
        GbUMzyICQABpOVbV/QrveEoCUtn00eOHnvq5GpJFVqlbmrVhqPsbdXKgHA5dUHrh0knH5aun7cbNatew
        VHsVuvJNpcsumzONpz8IAGIigMR1YEqmetnyav193cF4/tKJv32uVGdgBfyNYMkh6azdusmmf7PAhk+Y
        5o4Ou+aOcEsRXdXese8Qx8fB7z8ZMNxld+YUltjoyTNtzqIlrt24everhuF+qnqTZQcCQADP//lUuPNq
        535eNgBVe6E8jdQxrRvl79fapSunXLm1yq4/HTQqOeP4bwp3I50StzulyErxxJ+TbJS63C2v0N0DuXLT
        eteCTLOJlGx4fhEAAniGJYA6AflKAuo3YpzrBKTvTVP6XQd3uWNBVRpqg7AxgD2dOKReT/+t7NChpVPc
        5bBKEkvtcSAAAhkBtIBGZyUB6fzeRyuwYaVTXSelVZs2OBl06JrTOLKnv9lqojZEpd+6L3LhqpXuO07t
        OyAAQABPbMZpY23YhKnebgPSEqD3kGJ3x146Gqo+T29HLWt6BMsN1TnEOTUZASCAFgWgwNBI7StYU2v3
        zGnBnmgGk19c5jYNdYIQtyNFBIAAWswB0C66Ru2oXwkuwanhybfr1rhZT5xmAwgAAbS4Aaj1+vs9B3m5
        DSjzL2RJNIyZMOdLl/0Yl2NDBIAAWhSAOveouUrUg7/pd69fdVpQE5OeBQgAAbQoAF0H1sFDJ6Awzga+
        GDsxFo1LEAACaFEA2iHX+XzcBJCSwPAJU+1m/blI7wkgAATQogDmLF4S+Q3Af0K9JBMbgwgAYpYIVDLL
        TxJQmPcEVMG4bN0a10gWAUAsBKDRTnnzytzzkQYc9qXAh9mDrbzyYCRThxEAAmg2CUg5+/1Hjm/VjL12
        TZKFmhb7NP3f2ipPIK+4zOp/jF7GIAJAAM2u/69er3L3KaQz6FzFXzJHPyt5Dq+8g4+yC6xT3yGu/DdV
        Aqxinrd75LoUXvfnO7auEJS+vGTtamYAEAcB1Nv5iydc0KUjCSg1miugexUUu+SbZevW2rY9O+yH44es
        6lylS0LSWbzQ70+drbD9R/a6Wv/p3yy0AYUliSSl5Ou1xlJAdxpcrDkVqaUAAkAAzX6uypPl1r7LAO/B
        pZFetwNpg/HAkX1uWn0/eRFrqhPQ42bafj12/QMSf+bhg1q7c+eye486qegWBKZmBq0hgi+XLovU1eYI
        AAE0WwdwprrS8orK7MNgFqCLVBVc2hB80SBLFd4MHjfJyisOtHjl+vPsU+jvP3p407UJm79smX3UpyCt
        pcVZyVmA7pSMyiwAASCAZnn08Ibdvn3Jzl08bjv2fm8zFix0G2FakyuQU/X1ibX4sxXbLFmz2rUZd/36
        PO9ZqJJPMwJV9qVzBvBq576us3EDAoA4tAVPXaKqgFVCjNbjew7tti+DEXfw2EmuWlDNPp9s29V05O89
        dIwdqtjvpJLOwNH7vFFX7VqLvda5X5pOBLItZ1SpW4JEITkIASCA52rPnRBC4mZfdeHVdHh/+V5btGql
        S51V885UF2FRMG6yXQyk0Vojpt6fZhnjZsz10suwuaXMOz3yXOPSKNxwjAAQwEvPEv5sIoTam2ft4NH9
        brqvS0XVyru1P4fW58rh1wwlHRuDmuXMXbzEzWgQAAKItQCaXzYkevIrfbat1sr67k4GPxu1Dfd+kuFu
        OR7r7iNoQAAIAAFkLkvXrnGnGL6XAe/3GuQ2HcP+M0IACCCyaPZRV3/ea1/Dpui+gbAfByIABBB5Caze
        vMGl8vo+DdBpw73fryEABIAAMlkA165XuWxBn7MAbQT2KiiyW7cuhjonAAEggMijC07U2MOnALQPoFoJ
        3Z6MABAAAshgdCqh/oY+NwP1c3qre65LigpzPgACQAAxEECdS2lWWbHPI0ElGmkj8M/HCAABIICMRmnM
        /QtLvHY40mvNW7os1D8nBIAAYoGy9rRr73MfQP0Sy+bOd3sMCAABIIAM55sVK7wfBY4omxbqrsEIAAHE
        Yx/gjzrXTUjlvD5TglUZqOKjsJ4EIAAEEJuTAO3Y+6wQVC5A9rCxob5eHAEggHj8rB7X2+HKA15vOtKJ
        Qs/BRS7dGAEgAASQ4QLQZaftu/T3KoBueYXuNmEEgAAQQIYLoEIC8HjZqQSgcuPaG9WhLQpCAAggNgI4
        cuyg16IgJ4CcQAA3q5kBIAAEkOk/K7Uh99krUALokc8SAAEggFCkA2/ds93rKYAE8HlBcaivDEMACCA2
        ZcGrNq333htQzUZ+CnFJMAJAAH8NFM9k0s9Ltwj5LAZSIlDB+Ml29+caBIAAwi0APcAHf9hnE+fMt8nz
        vvLCpADtvGdCmqxqAUZPmenSd30WA+mKM11tRi0AAgi1ALRL/u36tfY/H/ZuvJb7ZVGxjC4QafPpf8Dd
        uzVuuu61GjD4fGoPTkMQBBAJAWzYvsVvqmwwRS6eOqvNq+X0Peq244/T0A9gxUb6ASCAKAgg+Cy7D+6y
        t7oP9HYluASga8ESxTJtXwfQwWsSUF93vbluRaIfAAIIvQD0bx0/fcT9275GSb2OXu/EmR/a/KLT2YsW
        e+8J2LHvELt89TRLAAQQjU1AZbR1yRnuvYe+2ma1VZBo5qEZiG7y8doVOHitAYUldvduuC8JRQAIoJFf
        f71quUUTvAfKoLET7Wd3VNY20//9R/a66brfI8BsmzL/61B3A0IACOAvPHxQazO+Weh9qvzeZ/lWXnmw
        TZYB9+5dt9LZ87zPatp3GWBbd28P/Q3BCAAB/GUf4Ltd2/zfotNJpwGz3QyjNWcBqX0N9e/3OvoHr9W5
        /zC7WHMq1Ot/BIAA/hYwqfbZWZ36eP1M+o52q4d+KwWMRCPhqBFoOm4HHlo61V2HHvZnGAEggL+gh3po
        6RTvU2YFYZ9hY1vtc2lk3rp7m73dPdfbsWZTVm3eEPrRHwEggGYDZ+13m7wmBDVFI/KdO5fTOhPQuvx0
        dYV1yxvpf/QPXk8JRecvnYhEsRYCQAB/WwbobPs/A0d4XQakUE8+7Z7r+CwdElDwXwrW5gNHlXoP/tT0
        X/n/Yd/9RwAI4KmJMzMXLExLALULeL1Lfxs/c65dv3HWfcYGT2t+zV6qzlVa7uj0BH8q++/Q0f2RKdVG
        AAig2VnAmepK+6hPQVoCKYV66iuVVvsOL/NZ9Xd/++2quwC0R/6otL1njf7DJ0wN9UUgCAABPBMPHtTa
        rIWL0hb8qfX0ez3zrTSYUpdXHrCff6lp/F61PGgpyDTSa6qvX7XTr26/42fOsXc8J/s8OXPR6L/v8J5I
        NWpBAAig+VE1CK7LV07Zp4NGpWUvoOnpgEZWJQvlFZfZwlUr7WAwxdYm263bF+3e79edjJSkpHW3Mgr1
        3VScLHcpxjqx+KDXIPc67dL8PounzUrmMiAAiEFLMI3AG7dvsTe65aTlKK05EejXN7sPdIk2vYcUW05h
        iX0xbpINKZlseUUTXE5/19yRThjtktPydAZ+6r0pN+Jk8LOOWps2BIAAnnok+OuvV9wUPd0CePI7cE1F
        Oma7phtq4vFKk9+3RtA/uWm5dO1qtzkatWcYASCAf5RAzdUzwcg7zntyUBiQaIaXTQv1BaAIAAG8tASO
        Hj/kpuVZneIjAQmve36hVZ0/FsngRwAI4LnQMVtqwy0OI79+DuokFJUjPwSAAF6yXPiGrd+22R3dRVkC
        +mw68lvz3cZIrvsRAAJ44VMBHcdt3PGdK7GN4p5AKviXrV9r9+/XRnr0RwAI4IUkoFFRDUR1HBclCaQS
        k5ZvWOd6/Ud13Y8AEIAXdC4+eNwkVzkY9iVBVvKq7217driEo6iP/AgAAXg5HdDFmPOWLHUjZxhnAylx
        DRxdapWnymP3DCMABPDSEtBaee/hPZZXVOaSZsIyG5Cw3v0s32YuWOQ6Isdhyo8AEEDaKgh//OmCWz93
        zytsDLBMDXyJatCYMtcxOC7rfQSAANI+G9CvaiiyaNVKV0ik/YHWTN39p1oDBb5ak6nr0a1bF731I0AA
        MRZAqud8u2Tu+EsRvM4HIRVA00pCBdW161W2YuM6V/f/biBJBWCr5vGnLioN/s13euS5Ow90/2Fd/Xkn
        q7iO+gjAowDUe04jdoeuOfaGB3R/nSrPrlw/E/rKs4ZkTb/afx2uOGAzFiy0XgXFbsMwdb22zzJezZ7a
        JYuI9KtmZj0HF9n0rxfYwR/22x13iw+BjwA8PuAqEtm5f6c7PvLFroO7ItV1piG5R6Akop+CabcaeCxb
        t8bdHNyroMg+6PWFvdktx15LLheaVv010mQ0d3+mSXWglhmSp0qEu+UV2siJ023ByhUu6Ot/PO/6CcR9
        qo8A0vpw17vZgC/CftvMP0lTwZhq46WNQ91FsPPATpd9py5E42bMtaElUyy/uMzdv6c1++dDii172Bjr
        N2Kc6wswrHSKjZk+26YFo/viNatdnYKWYzfrzrkS5qZdg3hOEQBkpAySQmiUQkJ+qjnQDEjtwzVjqAtG
        cQW21u4Sxu07l9z/r4Sd//69xGs0PKWVGCAACNX+wdPhe0IAAIAAAAABAAACAAAEAAAIAAAQAAAgAABA
        AACAAAAQAF8EAAIAAAQAAAgAABAAACAAAEAAAIAAAAABAAACAAAEAAAIAAAQAAAgAABAAACAAAAAAQAA
        AgAABAAACAAAEAAAIAAAQAAAgAAAAAEAAAIAAAQAAAgAABAAACAAAEAAAIAAAAABAAACAAAEAAAIAAAQ
        AAACAAAEAAAIAAAQAAAgAABAAACAAAAAAQAAAgAABAAACAAAEAAAIAAAQAAAgAAAAAEAAAIAAAQAAAgA
        ABAAACAAAGg9/h+j/BJ0+SxJcQAAAABJRU5ErkJggg==
</value>
  </data>
</root>